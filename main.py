import logging
import os
import random

import dialogs
import telebot
from flask import request, Flask
from telebot import types

import constants
import picurl

bot = telebot.TeleBot(constants.TOKEN)


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
# –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_registration = types.KeyboardButton('üíç –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üíê')
    button_banquet = types.KeyboardButton('ü•Ç –ë–∞–Ω–∫–µ—Ç üçΩ')
    button_dresscode = types.KeyboardButton('üëó –î—Ä–µ—Å—Å-–∫–æ–¥ üëî')
    button_media = types.KeyboardButton('üì∏ –§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ üé•')
    button_team = types.KeyboardButton('–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞')
    button_young = types.KeyboardButton('–û –Ω–∞—Å')
    markup.row(button_registration, button_banquet)
    markup.row(button_dresscode, button_media)
    markup.row(button_team, button_young)
    if message.chat.id != constants.GROUP_ID:
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –º–µ–Ω—é üëá", reply_markup=markup)
    else:
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –º–µ–Ω—é üëá", reply_markup=markup)
        bot.reply_to(message, '–°–º–æ—Ç—Ä–∏ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!')


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
@bot.message_handler(commands=['about'])
def message_about(message):
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text='–°—Ç–∞—Ç—å—è –æ —Ä–æ–±–æ—Ç–µ –ú–∞—Ä–≤–∏–Ω–µ –Ω–∞ Wikipedia.org',
                                            url=' ')
    keyboard.add(url_button)
    if message.chat.id != constants.GROUP_ID:
        bot.send_message(message.from_user.id, dialogs.s_about, parse_mode='html', reply_markup=keyboard)
    else:
        bot.send_message(message.from_user.id, dialogs.s_about, parse_mode='html', reply_markup=keyboard)
        bot.reply_to(message, '–û—Ç–≤–µ—Ç–∏–ª –≤ –ª–∏—á–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏!')


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def message_about(message):
    if message.chat.id != constants.GROUP_ID:
        bot.send_message(message.from_user.id, dialogs.s_help, parse_mode='html')
    else:
        bot.send_message(message.from_user.id, dialogs.s_help, parse_mode='html')
        bot.reply_to(message, '–ü—Ä–æ–≤–µ—Ä—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–∏!')


@bot.message_handler(content_types=['text'])
def send_message_main(message):
    # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–æ—Ç–∞
    if message.text.lower() == '–±–æ—Ç' or message.text.lower() == '–º–∞—Ä–≤–∏–Ω' or message.text.lower() == 'bot' or \
            message.text.lower() == 'marvin':
        bot.send_message(message.chat.id, '<i>–í—ã–∑—ã–≤–∞–ª–∏? ü§ñ</i>\n'
                                          '<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥!</b>'
                                          '\n\n–ù–∞–∂–º–∏ –Ω–∞ —ç—Ç—É —Å—Å—ã–ª–∫—É @WeddingInfo_bot, –∞ –∑–∞—Ç–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ '
                                          '–∏ —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –≤ –ª–∏—á–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ —Å–æ–±—ã—Ç–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ—Å—Ç–æ–∏—Ç—Å—è 10 –æ–∫—Ç—è–±—Ä—è '
                                          '—ç—Ç–æ–≥–æ –≥–æ–¥–∞!'
                                          '\n\n–û—Å—Ç–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Ç—ã –º–æ–∂–µ—à—å —É—Ç–æ—á–Ω–∏—Ç—å –≤ –æ–±—â–µ–º —á–∞—Ç–µ —É –∫–æ–∂–∞–Ω—ã—Ö –º–µ—à–∫–æ–≤ '
                                          '–ï–≤–≥–µ–Ω–∏–∏ –∏ –ú–∞–∫—Å–∏–º–∞!', parse_mode='html')
    # # –ø—Ä–æ—â–∞–Ω–∏–µ —Å –±–æ—Ç–æ–º
    # elif dialogs.func_dialogs(message.text):
    #     bot.reply_to(message, dialogs.func_dialogs(message.text))
    # –º–∞—Ç-—Ñ–∏–ª—å—Ç—Ä
    elif set(message.text.lower().split()) & dialogs.S_censored_words:
        bot.reply_to(message, random.choice(dialogs.L_response_from_bot) + ' ü§¨')
    elif message.text == 'date_here':
        bot.reply_to(message, '–ö—Ä–∞—Å–∏–≤–∞—è –¥–∞—Ç–∞!')
    # –º–µ–Ω—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    elif message.text == 'üíç –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üíê' or message.text.lower() == '—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ 2–ì–ò–°', url=' ')
        keyboard.add(url_button)
        bot.send_message(message.from_user.id, '<b>–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:</b> –ö—Ä–µ–º–ª—å\n'
                                               '<b>–°–±–æ—Ä –≥–æ—Å—Ç–µ–π –¥–ª—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏:</b> 16:00\n'
                                               '<b>–ù–∞—á–∞–ª–æ —Ü–µ—Ä–µ–º–æ–Ω–∏–∏:</b> 16:30\n\n'
                                               '–ù–∞ –º–µ—Å—Ç–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ü–µ—Ä–µ–º–æ–Ω–∏–∏ –±—É–¥–µ—Ç —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ Welcome –∑–æ–Ω–∞ —Å '
                                               '–ø—Ä–æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å–Ω—ã–º–∏ –Ω–∞–ø–∏—Ç–∫–∞–º–∏',
                         parse_mode='html',
                         reply_markup=keyboard)
        bot.send_location(message.from_user.id, latitude=46.349619, longitude=48.030969)
    # –º–µ–Ω—é –ë–∞–Ω–∫–µ—Ç
    elif message.text == "ü•Ç –ë–∞–Ω–∫–µ—Ç üçΩ" or message.text.lower() == '–±–∞–Ω–∫–µ—Ç':
        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ 2–ì–ò–°', url=' ')
        keyboard.add(url_button)
        bot.send_message(message.from_user.id, '<b>–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:</b> –±–∞–Ω–∫–µ—Ç–Ω—ã–π –∑–∞–ª " " '
                                               '(3 —ç—Ç–∞–∂), —É–ª.\n'
                                               '<b>–°–±–æ—Ä –≥–æ—Å—Ç–µ–π:</b> 17:30\n'
                                               '<b>–ù–∞—á–∞–ª–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:</b> 18:00',
                         parse_mode='html', reply_markup=keyboard)
        bot.send_location(message.from_user.id, latitude=46.350083, longitude=48.041742)
    # –º–µ–Ω—é –î—Ä–µ—Å—Å-–∫–æ–¥
    elif message.text == 'üëó –î—Ä–µ—Å—Å-–∫–æ–¥ üëî' or message.text.lower() == '–¥—Ä–µ—Å—Å-–∫–æ–¥':
        palette1 = picurl.palette1
        palette2 = picurl.palette2
        palette3 = picurl.pallete3
        dresscode1 = picurl.dresscode1
        bot.send_message(message.from_user.id, '<b>–£–≤–∞–∂–∞–µ–º—ã–µ –¥–∞–º—ã</b>, –º—ã –±—É–¥–µ–º —Ä–∞–¥—ã, –µ—Å–ª–∏ –≤–∞—à–∏ –ø–ª–∞—Ç—å—è –±—É–¥—É—Ç –±–ª–∏–∑–∫–∏ –∫ '
                                               '–Ω–∞—à–µ–π —Ü–≤–µ—Ç–æ–≤–æ–π –ø–∞–ª–∏—Ç—Ä–µ ‚ò∫Ô∏è!\n'
                                               '<b>–£–≤–∞–∂–∞–µ–º—ã–µ –¥–∂–µ–Ω—Ç–µ–ª—å–º–µ–Ω—ã</b>, –±—É–¥–µ–º –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω—ã, –µ—Å–ª–∏ –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ '
                                               '–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ-–¥–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å –æ–¥–µ–∂–¥—ã (–±–∞–±–æ—á–∫–∏ –¥—Ä—É–∑—å—è–º –∂–µ–Ω–∏—Ö–∞ –±—É–¥—É—Ç '
                                               '–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã)', parse_mode='html')
        media = [types.InputMediaPhoto(palette1, "–¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"),
                 types.InputMediaPhoto(palette2, "–¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"),
                 types.InputMediaPhoto(palette3, "–¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"),
                 types.InputMediaPhoto(dresscode1, "–ü—Ä–∏–º–µ—Ä –¥—Ä–µ—Å—Å-–∫–æ–¥–∞")]
        bot.send_media_group(message.from_user.id, media)
    # –º–µ–Ω—é –§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ
    elif message.text == 'üì∏ –§–æ—Ç–æ –∏ –≤–∏–¥–µ–æ üé•' or message.text.lower() == '—Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ':
        bot.send_message(message.from_user.id, '–°—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ—è–≤—è—Ç—Å—è –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é —Ç–æ—Ä–∂–µ—Å—Ç–≤–∞')
    # –º–µ–Ω—é –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞
    elif message.text.lower() == '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞' or message.text.lower() == '–Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞':
        kashirin = picurl.kashirin
        kashirina = picurl.kashirina
        baitelman = picurl.baitelman
        blinov = picurl.blinov
        shafeeva = picurl.shafeeva
        bot.send_message(message.from_user.id, '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏ —Å–æ–∑–¥–∞–Ω–∏—é —Ç–æ—Ä–∂–µ—Å—Ç–≤–∞:', parse_mode='html')
        media = [types.InputMediaPhoto(kashirin, "- –≤–µ–¥—É—â–∏–π"),
                 types.InputMediaPhoto(kashirina, "  - –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä"),
                 types.InputMediaPhoto(baitelman, "  - —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ"),
                 types.InputMediaPhoto(blinov, " - –≤–∏–¥–µ–æ–≥—Ä–∞—Ñ"),
                 types.InputMediaPhoto(shafeeva, "  - –¥–∏–∑–∞–π–Ω–µ—Ä")]
        bot.send_media_group(message.from_user.id, media)
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–ª–æ–¥—ã—Ö
    elif message.text == '–û –Ω–∞—Å' or message.text.lower() == '–æ –Ω–∞—Å':
        keyboard = types.InlineKeyboardMarkup()
        insta_evgenia = types.InlineKeyboardButton(text='–ñ–µ–Ω—è Instagram',
                                                   url=' ')
        insta_maksim = types.InlineKeyboardButton(text='–ú–∞–∫—Å Instagram',
                                                  url=' ')
        vk_evgenia = types.InlineKeyboardButton(text='–ñ–µ–Ω—è vkontakte',
                                                url=' ')
        vk_maksim = types.InlineKeyboardButton(text='–ú–∞–∫—Å vkontakte',
                                               url=' ')
        face_evgenia = types.InlineKeyboardButton(text='–ñ–µ–Ω—è facebook',
                                                  url=' ')
        face_maksim = types.InlineKeyboardButton(text='–ú–∞–∫—Å facebook',
                                                 url=' ')
        keyboard.add(insta_evgenia, insta_maksim)
        keyboard.add(vk_evgenia, vk_maksim)
        keyboard.add(face_evgenia, face_maksim)
        bot.send_message(message.from_user.id, dialogs.s_about_youg, parse_mode='html',
                         reply_markup=keyboard)


if "HEROKU" in list(os.environ.keys()):
    logger = telebot.logger
    telebot.logger.setLevel(logging.INFO)

    server = Flask(__name__)


    @server.route('/' + constants.TOKEN, methods=['POST'])
    def getMessage():
        bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
        return "!", 200


    @server.route("/")
    def webhook():
        bot.remove_webhook()
        bot.set_webhook(url=' ' + constants.TOKEN)
        return "!", 200


    if __name__ == '__main__':
        server.debug = True
        server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))

else:
    # –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è HEROKU –Ω–µ—Ç—É, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –∑–∞–ø—É—Å–∫ —Å –º–∞—à–∏–Ω—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.
    # –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å –æ–±—ã—á–Ω—ã–º –ø–æ–ª–ª–∏–Ω–≥–æ–º.
    bot.remove_webhook()
    bot.polling(none_stop=True)

# if __name__ == "__main__":
#     # bot.remove_webhook()
#     bot.polling(none_stop=True, interval=0)
